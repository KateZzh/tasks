// Мальчик идет долгим путем со школы домой. Чтобы сделать прогулку веселее, он
// складывает все номера домов, мимо которых проходит. К сожалению, не на всех
// домах написаны номера, к тому же мальчик регулярно меняет улицы по очереди,
// поэтому номера не представляются ему в определенном порядке.
// В какой-то момент во время прогулки мальчик встречает дом с написанным на
// нем 0 номером. Это настолько его удивляет, что он перестает прибавлять числа к
// своей сумме сразу после того, как видит этот дом.
// Для заданной последовательности домов определите сумму, которую получит
// мальчик. Гарантируется, что на пути всегда будет хотя бы один нулевой дом.
// Добавить проверку, что номера домов – только числа.
// [5, 1, 2, 3, 0, 1, 5, 0, 2] –> 11 (5 + 1 + 2 + 3 = 11)

const arrNum = [5, 1, 2, 3, 0, 1, 5, 0, 2];

function isValid(arrNum_) {
  const bool = arrNum_.every((el) => !isNaN(el));
  return bool;
}

function countSumNum(arrNum_) {
  try {
    let sumNum = 0;

    if (isValid(arrNum_)) {

      for (let i = 0; i < arrNum_.length; i++) {
        if (arrNum_[i] !== 0) {
          sumNum += arrNum_[i];
        } else break;
      }
      return sumNum;

    } else throw new Error("in the array not only numbers");
  } catch (error) {
    return error.message;
  }
}

const getSumNum = countSumNum(arrNum);
console.log(getSumNum);
